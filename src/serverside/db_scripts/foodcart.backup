--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.4
-- Dumped by pg_dump version 9.5.4

-- Started on 2016-12-23 05:58:03 PHT

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 1 (class 3079 OID 12393)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2402 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- TOC entry 267 (class 1255 OID 29562)
-- Name: add_order(integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION add_order(par_userid integer) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
    declare
      local_response bigint;
    begin
      insert into Orders(user_id) values (par_userID);

      select into local_response currval(pg_get_serial_sequence('Orders', 'id'));

      update Orders
      set order_food_id = local_response
      where id = local_response;

      return local_response;
    end;
  $$;


ALTER FUNCTION public.add_order(par_userid integer) OWNER TO ppg;

--
-- TOC entry 271 (class 1255 OID 29563)
-- Name: add_transaction(integer, integer, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION add_transaction(par_transnum integer, par_orderid integer, par_total double precision) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
    declare
      local_response bigint;
    begin
      insert into Transactions(transaction_number, order_id, total)
      values (par_transnum, par_orderID, par_total);

      select into local_response currval(pg_get_serial_sequence('Transactions', 'id'));

      update Transactions
      set address_id = local_response
      where id = local_response;

      return local_response;
    end;
  $$;


ALTER FUNCTION public.add_transaction(par_transnum integer, par_orderid integer, par_total double precision) OWNER TO ppg;

--
-- TOC entry 256 (class 1255 OID 29858)
-- Name: check_email(character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION check_email(par_email character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      local_response text;
      local_id bigint;
    begin
      select into local_id id
      from User_contacts
      where User_contacts.email = par_email;

      if local_id isnull then
        local_response = 'OK';
      else
        local_response = 'ALREADY EXISTS';
      end if;

      return local_response;
    end;
  $$;


ALTER FUNCTION public.check_email(par_email character varying) OWNER TO ppg;

--
-- TOC entry 258 (class 1255 OID 29857)
-- Name: check_email_password(character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION check_email_password(par_email character varying, par_password character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      local_response text;
    begin
      select into local_response email
      from Users, User_contacts
      where User_contacts.email = par_email
      and Users.user_password = par_password;

      if local_response isnull then
        local_response = 'FAILED';
      else
        local_response = 'OK';
      end if;

      return local_response;
    end;
  $$;


ALTER FUNCTION public.check_email_password(par_email character varying, par_password character varying) OWNER TO ppg;

--
-- TOC entry 237 (class 1255 OID 29564)
-- Name: check_restaurant(character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION check_restaurant(par_restoname character varying) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
		declare
			local_name varchar;
			local_id bigint;

		begin
			select into local_name resto_name
			from Restaurants
			where resto_name = par_restoName;

			if local_name isnull
			then
				local_id = 0;
			else
				select into local_id id
				from Restaurants
				where resto_name = par_restoName;

			end if;

			return local_id;

		end;

	$$;


ALTER FUNCTION public.check_restaurant(par_restoname character varying) OWNER TO ppg;

--
-- TOC entry 239 (class 1255 OID 29565)
-- Name: check_restaurant_branch(character varying, character varying, character varying, bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION check_restaurant_branch(par_bldg character varying, par_street character varying, par_room character varying, par_restoid bigint) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
    declare
      local_id int;
      local_response boolean;

    begin
      select into local_id id
      from Resto_branch_address
      where id in (select id
		               from Restaurant_branch
		               where resto_id = par_restoID)
		               and bldg_number = par_bldg and street = par_street and room_number = par_room;

      if local_id isnull
      then
        local_response = false; --does not exist

      else
        local_response = true; --does exist

      end if;

      return local_response;

    end;
  $$;


ALTER FUNCTION public.check_restaurant_branch(par_bldg character varying, par_street character varying, par_room character varying, par_restoid bigint) OWNER TO ppg;

--
-- TOC entry 228 (class 1255 OID 29566)
-- Name: create_contact_address(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION create_contact_address() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		begin
			if tg_op = 'INSERT' then
				insert into User_contacts(id)
					values (new.id);
				insert into User_address(id)
					values (new.id);
			end if;
			return new;
		end;
	$$;


ALTER FUNCTION public.create_contact_address() OWNER TO ppg;

--
-- TOC entry 229 (class 1255 OID 29567)
-- Name: create_food(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION create_food() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		begin
			if tg_op = 'INSERT' then
				insert into Food_images(id)
					values (new.id);
			end if;
			return new;
		end;
	$$;


ALTER FUNCTION public.create_food() OWNER TO ppg;

--
-- TOC entry 230 (class 1255 OID 29568)
-- Name: create_order_foods(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION create_order_foods() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		begin
			if tg_op = 'INSERT' then
				insert into Order_foods(id)
					values (new.id);
			end if;
			return new;
		end;
	$$;


ALTER FUNCTION public.create_order_foods() OWNER TO ppg;

--
-- TOC entry 231 (class 1255 OID 29569)
-- Name: create_restaurant(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION create_restaurant() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		begin
			if tg_op = 'INSERT' then
				insert into Resto_images(id)
					values (new.id);
			end if;
			return new;
		end;
	$$;


ALTER FUNCTION public.create_restaurant() OWNER TO ppg;

--
-- TOC entry 232 (class 1255 OID 29570)
-- Name: create_restaurant_branch(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION create_restaurant_branch() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		begin
			if tg_op = 'INSERT' then
				insert into Resto_branch_contacts(id)
					values (new.id);
				insert into Resto_branch_address(id)
					values (new.id);
			end if;
			return new;
		end;
	$$;


ALTER FUNCTION public.create_restaurant_branch() OWNER TO ppg;

--
-- TOC entry 233 (class 1255 OID 29571)
-- Name: create_transaction(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION create_transaction() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
		begin
			if tg_op = 'INSERT' then
				insert into Transaction_address(id)
					values (new.id);
			end if;
			return new;
		end;
	$$;


ALTER FUNCTION public.create_transaction() OWNER TO ppg;

--
-- TOC entry 263 (class 1255 OID 29572)
-- Name: deactivate_user(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION deactivate_user(par_id bigint) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      loc_res text;
    begin
      update Users set is_active = False where id = par_id;

      loc_res = 'SUCCESS';
      return loc_res;
    end;
  $$;


ALTER FUNCTION public.deactivate_user(par_id bigint) OWNER TO ppg;

--
-- TOC entry 253 (class 1255 OID 29847)
-- Name: delete_food(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION delete_food(par_food_id bigint) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;
		begin
			update Foods
			set is_active = False
			where id = par_food_id ;

			local_response = 'SUCCESS';
			return local_response;
		end;
	$$;


ALTER FUNCTION public.delete_food(par_food_id bigint) OWNER TO ppg;

--
-- TOC entry 246 (class 1255 OID 29573)
-- Name: delete_restaurant_branch(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION delete_restaurant_branch(par_restoid bigint) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;
		begin
			update Restaurant_branch
			set is_active = False
			where id = par_restoID;

			local_response = 'SUCCESS';
			return local_response;
		end;
	$$;


ALTER FUNCTION public.delete_restaurant_branch(par_restoid bigint) OWNER TO ppg;

--
-- TOC entry 257 (class 1255 OID 29859)
-- Name: get_password(character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION get_password(par_email character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      loc_password text;
    begin
      select into loc_password Users.user_password
      from Users, User_contacts
      where User_contacts.email = par_email;

      if loc_password isnull then
        loc_password = 'null';
      end if;
      return loc_password;
    end;
  $$;


ALTER FUNCTION public.get_password(par_email character varying) OWNER TO ppg;

--
-- TOC entry 244 (class 1255 OID 29574)
-- Name: get_restaurant_id(integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION get_restaurant_id(par_resto_branch_id integer) RETURNS integer
    LANGUAGE sql
    AS $$
		select resto_id
		from Restaurant_branch
		where id = par_resto_branch_id;
	$$;


ALTER FUNCTION public.get_restaurant_id(par_resto_branch_id integer) OWNER TO ppg;

--
-- TOC entry 252 (class 1255 OID 29575)
-- Name: search_food(text); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION search_food(par_search text, OUT bigint, OUT character varying, OUT text, OUT double precision, OUT integer, OUT integer, OUT boolean, OUT boolean) RETURNS SETOF record
    LANGUAGE sql
    AS $$
      select *
      from Foods
      where food_name like '%'|| par_search || '%';
  $$;


ALTER FUNCTION public.search_food(par_search text, OUT bigint, OUT character varying, OUT text, OUT double precision, OUT integer, OUT integer, OUT boolean, OUT boolean) OWNER TO ppg;

--
-- TOC entry 215 (class 1255 OID 29576)
-- Name: search_restaurant(text); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION search_restaurant(par_search text, OUT bigint, OUT character varying, OUT double precision, OUT integer) RETURNS SETOF record
    LANGUAGE sql
    AS $$
      select *
      from Restaurants
      where resto_name like '%'|| par_search || '%';
  $$;


ALTER FUNCTION public.search_restaurant(par_search text, OUT bigint, OUT character varying, OUT double precision, OUT integer) OWNER TO ppg;

--
-- TOC entry 264 (class 1255 OID 29577)
-- Name: search_user(text); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION search_user(par_search text, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select Users.fname,
      Users.mname,
      Users.lname,
      Users.earned_points,
      Users.role_id,
      User_contacts.email,
      User_contacts.tel_number,
      User_contacts.mobile_number,
      User_address.bldg_number,
      User_address.street,
      User_address.room_number
    from Users
    inner join User_contacts on (
      Users.contact_id = User_contacts.id
    )
    inner join User_address on (
      Users.address_id = User_address.id
    )
    where fname like '%' || par_search || '%'
        or mname like '%' || par_search || '%'
        or lname like '%' || par_search || '%';
  $$;


ALTER FUNCTION public.search_user(par_search text, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) OWNER TO ppg;

--
-- TOC entry 242 (class 1255 OID 29578)
-- Name: show_all_restaurant_branch(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_all_restaurant_branch(OUT bigint, OUT character varying, OUT double precision, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT boolean) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select Restaurant_branch.id, resto_name, delivery_fee, min_order, email, tel_number, mobile_number, bldg_number, street, room_number, url, Restaurant_branch.is_active
		from Restaurant_branch
			inner join Restaurants on Restaurant_branch.resto_id = Restaurants.id
			inner join Resto_branch_contacts on Restaurant_branch.contact_id = Resto_branch_contacts.id
			inner join Resto_branch_address on Restaurant_branch.address_id = Resto_branch_address.id
			inner join Resto_images on Restaurant_branch.resto_id = Resto_images.id
	$$;


ALTER FUNCTION public.show_all_restaurant_branch(OUT bigint, OUT character varying, OUT double precision, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT boolean) OWNER TO ppg;

--
-- TOC entry 250 (class 1255 OID 29579)
-- Name: show_food(integer, integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_food(par_resto_id integer, par_food_id integer, OUT bigint, OUT character varying, OUT text, OUT double precision, OUT boolean, OUT boolean, OUT character varying) RETURNS SETOF record
    LANGUAGE sql
    AS $$

    select Foods.id, food_name, description, unit_cost, is_available, is_active, url
    from Foods
    inner join Food_images on Foods.image_id = Food_images.id
    where Foods.resto_id = par_resto_id and Foods.id = par_food_id;

  $$;


ALTER FUNCTION public.show_food(par_resto_id integer, par_food_id integer, OUT bigint, OUT character varying, OUT text, OUT double precision, OUT boolean, OUT boolean, OUT character varying) OWNER TO ppg;

--
-- TOC entry 248 (class 1255 OID 29580)
-- Name: show_foods(integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_foods(par_resto_id integer, OUT bigint, OUT character varying, OUT text, OUT double precision, OUT boolean, OUT boolean, OUT character varying) RETURNS SETOF record
    LANGUAGE sql
    AS $$

    select Foods.id, food_name, description, unit_cost, is_available, is_active, url
    from Foods
    inner join Food_images on Foods.image_id = Food_images.id
    where Foods.resto_id= par_resto_id;

  $$;


ALTER FUNCTION public.show_foods(par_resto_id integer, OUT bigint, OUT character varying, OUT text, OUT double precision, OUT boolean, OUT boolean, OUT character varying) OWNER TO ppg;

--
-- TOC entry 269 (class 1255 OID 29581)
-- Name: show_order_id(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_order_id(par_id bigint, OUT integer, OUT integer, OUT integer, OUT integer, OUT boolean) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select
      Orders.user_id,
      Order_foods.quantity,
      Order_foods.food_id,
      Order_foods.resto_branch_id,
      Orders.is_done
    from Orders
    inner join Order_foods on Orders.order_food_id = Order_foods.id
    where Orders.id = par_ID;
  $$;


ALTER FUNCTION public.show_order_id(par_id bigint, OUT integer, OUT integer, OUT integer, OUT integer, OUT boolean) OWNER TO ppg;

--
-- TOC entry 270 (class 1255 OID 29582)
-- Name: show_orders(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_orders(OUT bigint, OUT integer, OUT integer, OUT boolean, OUT integer, OUT integer, OUT integer) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select Orders.*,
      Order_foods.quantity,
      Order_foods.food_id,
      Order_foods.resto_branch_id
    from Orders
    inner join Order_foods on Orders.order_food_id = Order_foods.id
  $$;


ALTER FUNCTION public.show_orders(OUT bigint, OUT integer, OUT integer, OUT boolean, OUT integer, OUT integer, OUT integer) OWNER TO ppg;

--
-- TOC entry 241 (class 1255 OID 29583)
-- Name: show_restaurant_branch(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_restaurant_branch(par_restoid bigint, OUT character varying, OUT double precision, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT boolean) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select resto_name, delivery_fee, min_order, email, tel_number, mobile_number, bldg_number, street, room_number, url, Restaurant_branch.is_active
		from Restaurant_branch
			inner join Restaurants on Restaurant_branch.resto_id = Restaurants.id
			inner join Resto_branch_contacts on Restaurant_branch.contact_id = Resto_branch_contacts.id
			inner join Resto_branch_address on Restaurant_branch.address_id = Resto_branch_address.id
			inner join Resto_images on Restaurant_branch.resto_id = Resto_images.id
		where Restaurant_branch.id = par_restoID;
	$$;


ALTER FUNCTION public.show_restaurant_branch(par_restoid bigint, OUT character varying, OUT double precision, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT boolean) OWNER TO ppg;

--
-- TOC entry 274 (class 1255 OID 29584)
-- Name: show_transaction(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_transaction(OUT integer, OUT timestamp without time zone, OUT integer, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT boolean) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select
      Transactions.transaction_number,
      Transactions.transaction_date,
      Transactions.order_id,
      Transactions.total,
      Transaction_address.bldg_number,
      Transaction_address.street,
      Transaction_address.room_number,
      Transactions.is_paid
    from Transactions
    inner join Transaction_address on Transactions.address_id = Transaction_address.id
  $$;


ALTER FUNCTION public.show_transaction(OUT integer, OUT timestamp without time zone, OUT integer, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT boolean) OWNER TO ppg;

--
-- TOC entry 273 (class 1255 OID 29585)
-- Name: show_transaction_id(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_transaction_id(par_id bigint, OUT integer, OUT timestamp without time zone, OUT integer, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT boolean) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select
      Transactions.transaction_number,
      Transactions.transaction_date,
      Transactions.order_id,
      Transactions.total,
      Transaction_address.bldg_number,
      Transaction_address.street,
      Transaction_address.room_number,
      Transactions.is_paid
    from Transactions
    inner join Transaction_address on Transactions.address_id = Transaction_address.id
    where Transactions.id = par_ID;
  $$;


ALTER FUNCTION public.show_transaction_id(par_id bigint, OUT integer, OUT timestamp without time zone, OUT integer, OUT double precision, OUT character varying, OUT character varying, OUT character varying, OUT boolean) OWNER TO ppg;

--
-- TOC entry 261 (class 1255 OID 29586)
-- Name: show_user(); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_user(OUT bigint, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT integer, OUT integer, OUT boolean, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select Users.*,
      User_contacts.email,
      User_contacts.tel_number,
      User_contacts.mobile_number,
      User_address.bldg_number,
      User_address.street,
      User_address.room_number
    from Users
    inner join User_contacts on (
      Users.contact_id = User_contacts.id
    )
    inner join User_address on (
      Users.address_id = User_address.id
    );
  $$;


ALTER FUNCTION public.show_user(OUT bigint, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT integer, OUT integer, OUT boolean, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) OWNER TO ppg;

--
-- TOC entry 276 (class 1255 OID 29587)
-- Name: show_user_email(character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_user_email(par_email character varying, OUT bigint, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT integer, OUT integer, OUT boolean, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select
      Users.id,
      Users.fname,
      Users.mname,
      Users.lname,
      Users.user_password,
      Users.earned_points,
      Users.contact_id,
      Users.address_id,
      Users.role_id,
      Users.is_active,
      User_contacts.email,
      User_contacts.tel_number,
      User_contacts.mobile_number,
      User_address.bldg_number,
      User_address.street,
      User_address.room_number
      from Users
    inner join User_contacts on (
      Users.contact_id = User_contacts.id
    )
    inner join User_address on (
      Users.address_id = User_address.id
    )
    where User_contacts.email = par_email;
  $$;


ALTER FUNCTION public.show_user_email(par_email character varying, OUT bigint, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT integer, OUT integer, OUT boolean, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) OWNER TO ppg;

--
-- TOC entry 260 (class 1255 OID 29588)
-- Name: show_user_id(bigint); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION show_user_id(par_id bigint, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT integer, OUT integer, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) RETURNS SETOF record
    LANGUAGE sql
    AS $$
    select Users.fname,
      Users.mname,
      Users.lname,
      Users.user_password,
      Users.earned_points,
      Users.contact_id,
      Users.address_id,
      Users.role_id,
      User_contacts.email,
      User_contacts.tel_number,
      User_contacts.mobile_number,
      User_address.bldg_number,
      User_address.street,
      User_address.room_number
      from Users
    inner join User_contacts on (
      Users.contact_id = User_contacts.id
    )
    inner join User_address on (
      Users.address_id = User_address.id
    )
    where Users.id = par_ID;
  $$;


ALTER FUNCTION public.show_user_id(par_id bigint, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT double precision, OUT integer, OUT integer, OUT integer, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying, OUT character varying) OWNER TO ppg;

--
-- TOC entry 247 (class 1255 OID 29589)
-- Name: store_food(character varying, text, double precision, integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION store_food(par_food_name character varying, par_description text, par_unit_cost double precision, par_resto_id integer) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
		declare
			local_food_name	varchar;
			local_response bigint;

		begin

			select into local_food_name food_name
			from Foods
			where food_name = par_food_name;

			if local_food_name isnull
			then
				insert into Foods(food_name, description, unit_cost, resto_id)
					values (par_food_name, par_description, par_unit_cost, par_resto_id);

				select into local_response currval(pg_get_serial_sequence('Foods','id'));

				update Foods
				set image_id = local_response
				where id = local_response;

			else
				local_response = 0;

			end if;

			return local_response;

		end;
	$$;


ALTER FUNCTION public.store_food(par_food_name character varying, par_description text, par_unit_cost double precision, par_resto_id integer) OWNER TO ppg;

--
-- TOC entry 236 (class 1255 OID 29590)
-- Name: store_restaurant(character varying, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION store_restaurant(par_restoname character varying, par_minorder double precision) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
		DECLARE
			local_name	varchar;
			local_response int;
		BEGIN
			if (check_restaurant(par_restoName) = 0)
			then
				insert into Restaurants(resto_name, min_order)
				values (par_restoName, par_minOrder);

				select into local_response currval(pg_get_serial_sequence('Restaurants','id'));

		        update Restaurants
		          set image_id = local_response
		        where id = local_response;

			else
				local_response = check_restaurant(par_restoName);

			end if;

			return local_response;
		END;
	$$;


ALTER FUNCTION public.store_restaurant(par_restoname character varying, par_minorder double precision) OWNER TO ppg;

--
-- TOC entry 234 (class 1255 OID 29591)
-- Name: store_restaurant_branch(bigint, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION store_restaurant_branch(par_restoid bigint, par_deliveryfee double precision) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
		declare
			local_name varchar;
			local_id bigint;
			local_response bigint;

		begin

			insert into Restaurant_branch(delivery_fee, resto_id)
			  values (par_deliveryFee, par_restoID);

			select into local_response currval(pg_get_serial_sequence('Restaurant_branch','id'));

			update Restaurant_branch
		        set contact_id = local_response,
		            address_id = local_response
		    where id = local_response;

			return local_response;

		end;
	$$;


ALTER FUNCTION public.store_restaurant_branch(par_restoid bigint, par_deliveryfee double precision) OWNER TO ppg;

--
-- TOC entry 275 (class 1255 OID 29592)
-- Name: store_role(character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION store_role(par_rolename character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
		DECLARE
			loc_rname TEXT;
			loc_res TEXT;
		BEGIN
			SELECT INTO loc_rname rolename FROM Roles  WHERE rolename = par_rolename;

			IF loc_rname ISNULL
			THEN
				INSERT INTO Roles(rolename) VALUES (par_rolename);
				loc_res = 'OK';

			ELSE
				loc_res = 'EXISTED';

			END IF;
			RETURN loc_res;
		END;
	$$;


ALTER FUNCTION public.store_role(par_rolename character varying) OWNER TO ppg;

--
-- TOC entry 254 (class 1255 OID 29593)
-- Name: store_user(character varying, character varying, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION store_user(par_fname character varying, par_mname character varying, par_lname character varying, par_password character varying, par_rolename integer) RETURNS bigint
    LANGUAGE plpgsql
    AS $$
    declare
      local_name text;
      local_response bigint;
    begin

      select into local_name fname || lname from Users where fname = par_fname and lname = par_lname;
      IF local_name isnull then
        insert into Users (fname, mname, lname, user_password, role_id)
        values (par_fname, par_mname, par_lname, par_password, par_rolename);

      SELECT INTO local_response currval(pg_get_serial_sequence('Users','id'));

      update Users
      set contact_id = local_response,
          address_id = local_response
      where id = local_response;

      return local_response;

      ELSE
        --local_response returns 0 if user exists
        local_response = 0;

      END IF;
      RETURN local_response;

    end;
  $$;


ALTER FUNCTION public.store_user(par_fname character varying, par_mname character varying, par_lname character varying, par_password character varying, par_rolename integer) OWNER TO ppg;

--
-- TOC entry 251 (class 1255 OID 29594)
-- Name: update_food(integer, character varying, text, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_food(par_food_id integer, par_food_name character varying, par_description text, par_unit_cost double precision) RETURNS text
    LANGUAGE plpgsql
    AS $$

    declare
      local_response text;

    begin
        Update Foods
        set food_name = par_food_name,
            description = par_description,
            unit_cost = par_unit_cost
        where id = par_food_id;

        local_response = 'SUCCESS';
        return local_response;

    end;
  $$;


ALTER FUNCTION public.update_food(par_food_id integer, par_food_name character varying, par_description text, par_unit_cost double precision) OWNER TO ppg;

--
-- TOC entry 249 (class 1255 OID 29595)
-- Name: update_food_image(integer, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_food_image(par_id integer, par_url character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;

		begin
			Update Food_images
			set url = par_url
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_food_image(par_id integer, par_url character varying) OWNER TO ppg;

--
-- TOC entry 259 (class 1255 OID 29860)
-- Name: update_order(integer, integer, boolean); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_order(par_id integer, par_quantity integer, par_done boolean) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      local_response text;
    begin
      Update Orders
      set Order_foods.quantity = par_quantity,
          is_done = par_done
      from Order_foods
      inner join Order_foods on Orders.order_food_id = Order_foods.id
      where id = par_id;

      local_response = 'OK';

			return local_response;
		end;
  $$;


ALTER FUNCTION public.update_order(par_id integer, par_quantity integer, par_done boolean) OWNER TO ppg;

--
-- TOC entry 268 (class 1255 OID 29596)
-- Name: update_orderfoodid(integer, integer, integer, integer); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_orderfoodid(par_id integer, par_quantity integer, par_foodid integer, par_restobranchid integer) RETURNS text
    LANGUAGE plpgsql
    AS $$

		declare
			local_response text;

		begin
			Update Order_foods
			set quantity = par_quantity,
				food_id = par_foodID,
				resto_branch_id = par_restobranchID
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_orderfoodid(par_id integer, par_quantity integer, par_foodid integer, par_restobranchid integer) OWNER TO ppg;

--
-- TOC entry 245 (class 1255 OID 29597)
-- Name: update_restaurant(integer, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_restaurant(par_restoid integer, par_minorder double precision) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;
		begin
			update Restaurants
			set min_order = par_minOrder
			where id = par_restoID;

			local_response = 'OK';
			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_restaurant(par_restoid integer, par_minorder double precision) OWNER TO ppg;

--
-- TOC entry 243 (class 1255 OID 29598)
-- Name: update_restaurant_branch(integer, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_restaurant_branch(par_restoid integer, par_deliveryfee double precision) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;
		begin
			update Restaurant_branch
			set delivery_fee = par_deliveryFee
			where id = par_restoID;

			local_response = 'OK';
			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_restaurant_branch(par_restoid integer, par_deliveryfee double precision) OWNER TO ppg;

--
-- TOC entry 240 (class 1255 OID 29599)
-- Name: update_resto_branch_address(integer, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_resto_branch_address(par_id integer, par_bldgnum character varying, par_street character varying, par_roomnum character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$

		declare
			local_response text;

		begin
			Update Resto_branch_address
			set bldg_number = par_bldgNum,
				street = par_street,
				room_number = par_roomNum
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_resto_branch_address(par_id integer, par_bldgnum character varying, par_street character varying, par_roomnum character varying) OWNER TO ppg;

--
-- TOC entry 238 (class 1255 OID 29600)
-- Name: update_resto_branch_contact(integer, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_resto_branch_contact(par_id integer, par_email character varying, par_telnum character varying, par_mobnum character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;

		begin
			Update Resto_branch_contacts
			set email = par_email,
				tel_number = par_telNum,
				mobile_number = par_mobNum
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_resto_branch_contact(par_id integer, par_email character varying, par_telnum character varying, par_mobnum character varying) OWNER TO ppg;

--
-- TOC entry 235 (class 1255 OID 29601)
-- Name: update_resto_image(integer, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_resto_image(par_id integer, par_url character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;

		begin
			Update Resto_images
			set url = par_url
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_resto_image(par_id integer, par_url character varying) OWNER TO ppg;

--
-- TOC entry 272 (class 1255 OID 29602)
-- Name: update_trans_address(integer, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_trans_address(par_id integer, par_bldgnum character varying, par_street character varying, par_roomnum character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$

		declare
			local_response text;

		begin
			Update Transaction_address
			set bldg_number = par_bldgNum,
				street = par_street,
				room_number = par_roomNum
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_trans_address(par_id integer, par_bldgnum character varying, par_street character varying, par_roomnum character varying) OWNER TO ppg;

--
-- TOC entry 262 (class 1255 OID 29603)
-- Name: update_user(bigint, character varying, character varying, character varying, character varying, double precision); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_user(par_id bigint, par_fname character varying, par_mname character varying, par_lname character varying, par_password character varying, par_points double precision) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      local_response text;
    begin
      update Users
      set
        fname = par_fname,
        mname = par_mname,
        lname = par_lname,
        user_password = par_password,
        earned_points = par_points
      where id = par_ID;

      local_response = 'OK';
      return local_response;

    end;
  $$;


ALTER FUNCTION public.update_user(par_id bigint, par_fname character varying, par_mname character varying, par_lname character varying, par_password character varying, par_points double precision) OWNER TO ppg;

--
-- TOC entry 266 (class 1255 OID 29604)
-- Name: update_user_address(integer, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_user_address(par_id integer, par_bldgnum character varying, par_street character varying, par_roomnum character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$

		declare
			local_response text;

		begin
			Update User_address
			set bldg_number = par_bldgNum,
				street = par_street,
				room_number = par_roomNum
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_user_address(par_id integer, par_bldgnum character varying, par_street character varying, par_roomnum character varying) OWNER TO ppg;

--
-- TOC entry 265 (class 1255 OID 29605)
-- Name: update_user_contact(integer, character varying, character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION update_user_contact(par_id integer, par_email character varying, par_telnum character varying, par_mobnum character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
		declare
			local_response text;

		begin
			Update User_contacts
			set email = par_email,
				tel_number = par_telNum,
				mobile_number = par_mobNum
			where id = par_id;

			local_response = 'OK';

			return local_response;
		end;
	$$;


ALTER FUNCTION public.update_user_contact(par_id integer, par_email character varying, par_telnum character varying, par_mobnum character varying) OWNER TO ppg;

--
-- TOC entry 255 (class 1255 OID 29606)
-- Name: user_login(character varying, character varying); Type: FUNCTION; Schema: public; Owner: ppg
--

CREATE FUNCTION user_login(par_email character varying, par_password character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
    declare
      local_response text;
    begin
      select into local_response User_contacts.email
      from Users, User_contacts
      where User_contacts.email = par_email
      and Users.user_password = par_password;

      if local_response isnull then
        local_response = 'FAILED';
      else
        local_response = 'OK';
      end if;

      return local_response;
    end;
  $$;


ALTER FUNCTION public.user_login(par_email character varying, par_password character varying) OWNER TO ppg;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 181 (class 1259 OID 29607)
-- Name: categories; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE categories (
    id bigint NOT NULL,
    category_name character varying(100) NOT NULL,
    is_active boolean DEFAULT true
);


ALTER TABLE categories OWNER TO ppg;

--
-- TOC entry 182 (class 1259 OID 29611)
-- Name: categories_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE categories_id_seq OWNER TO ppg;

--
-- TOC entry 2403 (class 0 OID 0)
-- Dependencies: 182
-- Name: categories_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE categories_id_seq OWNED BY categories.id;


--
-- TOC entry 183 (class 1259 OID 29613)
-- Name: category_foods; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE category_foods (
    id bigint NOT NULL,
    foods_id integer,
    category_id integer
);


ALTER TABLE category_foods OWNER TO ppg;

--
-- TOC entry 184 (class 1259 OID 29616)
-- Name: category_foods_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE category_foods_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE category_foods_id_seq OWNER TO ppg;

--
-- TOC entry 2404 (class 0 OID 0)
-- Dependencies: 184
-- Name: category_foods_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE category_foods_id_seq OWNED BY category_foods.id;


--
-- TOC entry 185 (class 1259 OID 29618)
-- Name: food_images; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE food_images (
    id bigint NOT NULL,
    url character varying(50)
);


ALTER TABLE food_images OWNER TO ppg;

--
-- TOC entry 186 (class 1259 OID 29621)
-- Name: food_images_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE food_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE food_images_id_seq OWNER TO ppg;

--
-- TOC entry 2405 (class 0 OID 0)
-- Dependencies: 186
-- Name: food_images_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE food_images_id_seq OWNED BY food_images.id;


--
-- TOC entry 187 (class 1259 OID 29623)
-- Name: foods; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE foods (
    id bigint NOT NULL,
    food_name character varying(200) NOT NULL,
    description text NOT NULL,
    unit_cost double precision,
    resto_id integer,
    image_id integer,
    is_available boolean DEFAULT true,
    is_active boolean DEFAULT true
);


ALTER TABLE foods OWNER TO ppg;

--
-- TOC entry 188 (class 1259 OID 29631)
-- Name: foods_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE foods_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE foods_id_seq OWNER TO ppg;

--
-- TOC entry 2406 (class 0 OID 0)
-- Dependencies: 188
-- Name: foods_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE foods_id_seq OWNED BY foods.id;


--
-- TOC entry 189 (class 1259 OID 29633)
-- Name: order_foods; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE order_foods (
    id bigint NOT NULL,
    quantity integer,
    food_id integer,
    resto_branch_id integer
);


ALTER TABLE order_foods OWNER TO ppg;

--
-- TOC entry 190 (class 1259 OID 29636)
-- Name: order_foods_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE order_foods_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE order_foods_id_seq OWNER TO ppg;

--
-- TOC entry 2407 (class 0 OID 0)
-- Dependencies: 190
-- Name: order_foods_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE order_foods_id_seq OWNED BY order_foods.id;


--
-- TOC entry 191 (class 1259 OID 29638)
-- Name: orders; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE orders (
    id bigint NOT NULL,
    user_id integer,
    order_food_id integer,
    is_done boolean DEFAULT false
);


ALTER TABLE orders OWNER TO ppg;

--
-- TOC entry 192 (class 1259 OID 29642)
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE orders_id_seq OWNER TO ppg;

--
-- TOC entry 2408 (class 0 OID 0)
-- Dependencies: 192
-- Name: orders_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE orders_id_seq OWNED BY orders.id;


--
-- TOC entry 193 (class 1259 OID 29644)
-- Name: restaurant_branch; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE restaurant_branch (
    id bigint NOT NULL,
    delivery_fee double precision,
    contact_id integer,
    resto_id integer,
    address_id integer,
    is_active boolean DEFAULT true
);


ALTER TABLE restaurant_branch OWNER TO ppg;

--
-- TOC entry 194 (class 1259 OID 29648)
-- Name: restaurant_branch_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE restaurant_branch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE restaurant_branch_id_seq OWNER TO ppg;

--
-- TOC entry 2409 (class 0 OID 0)
-- Dependencies: 194
-- Name: restaurant_branch_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE restaurant_branch_id_seq OWNED BY restaurant_branch.id;


--
-- TOC entry 195 (class 1259 OID 29650)
-- Name: restaurants; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE restaurants (
    id bigint NOT NULL,
    resto_name character varying(100) NOT NULL,
    min_order double precision,
    image_id integer
);


ALTER TABLE restaurants OWNER TO ppg;

--
-- TOC entry 196 (class 1259 OID 29653)
-- Name: restaurants_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE restaurants_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE restaurants_id_seq OWNER TO ppg;

--
-- TOC entry 2410 (class 0 OID 0)
-- Dependencies: 196
-- Name: restaurants_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE restaurants_id_seq OWNED BY restaurants.id;


--
-- TOC entry 197 (class 1259 OID 29655)
-- Name: resto_branch_address; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE resto_branch_address (
    id bigint NOT NULL,
    bldg_number character varying(15),
    street character varying(50),
    room_number character varying(15)
);


ALTER TABLE resto_branch_address OWNER TO ppg;

--
-- TOC entry 198 (class 1259 OID 29658)
-- Name: resto_branch_address_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE resto_branch_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE resto_branch_address_id_seq OWNER TO ppg;

--
-- TOC entry 2411 (class 0 OID 0)
-- Dependencies: 198
-- Name: resto_branch_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE resto_branch_address_id_seq OWNED BY resto_branch_address.id;


--
-- TOC entry 199 (class 1259 OID 29660)
-- Name: resto_branch_contacts; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE resto_branch_contacts (
    id bigint NOT NULL,
    email character varying(50),
    tel_number character varying(50),
    mobile_number character varying(50)
);


ALTER TABLE resto_branch_contacts OWNER TO ppg;

--
-- TOC entry 200 (class 1259 OID 29663)
-- Name: resto_branch_contacts_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE resto_branch_contacts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE resto_branch_contacts_id_seq OWNER TO ppg;

--
-- TOC entry 2412 (class 0 OID 0)
-- Dependencies: 200
-- Name: resto_branch_contacts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE resto_branch_contacts_id_seq OWNED BY resto_branch_contacts.id;


--
-- TOC entry 201 (class 1259 OID 29665)
-- Name: resto_images; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE resto_images (
    id bigint NOT NULL,
    url character varying(50)
);


ALTER TABLE resto_images OWNER TO ppg;

--
-- TOC entry 202 (class 1259 OID 29668)
-- Name: resto_images_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE resto_images_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE resto_images_id_seq OWNER TO ppg;

--
-- TOC entry 2413 (class 0 OID 0)
-- Dependencies: 202
-- Name: resto_images_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE resto_images_id_seq OWNED BY resto_images.id;


--
-- TOC entry 203 (class 1259 OID 29670)
-- Name: roles; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE roles (
    id bigint NOT NULL,
    rolename character varying(50)
);


ALTER TABLE roles OWNER TO ppg;

--
-- TOC entry 204 (class 1259 OID 29673)
-- Name: roles_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE roles_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE roles_id_seq OWNER TO ppg;

--
-- TOC entry 2414 (class 0 OID 0)
-- Dependencies: 204
-- Name: roles_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE roles_id_seq OWNED BY roles.id;


--
-- TOC entry 205 (class 1259 OID 29675)
-- Name: transaction_address; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE transaction_address (
    id bigint NOT NULL,
    bldg_number character varying(15),
    street character varying(50),
    room_number character varying(15)
);


ALTER TABLE transaction_address OWNER TO ppg;

--
-- TOC entry 206 (class 1259 OID 29678)
-- Name: transaction_address_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE transaction_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE transaction_address_id_seq OWNER TO ppg;

--
-- TOC entry 2415 (class 0 OID 0)
-- Dependencies: 206
-- Name: transaction_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE transaction_address_id_seq OWNED BY transaction_address.id;


--
-- TOC entry 207 (class 1259 OID 29680)
-- Name: transactions; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE transactions (
    id bigint NOT NULL,
    transaction_number integer,
    transaction_date timestamp without time zone DEFAULT now(),
    order_id integer,
    total double precision,
    is_paid boolean DEFAULT false,
    address_id integer
);


ALTER TABLE transactions OWNER TO ppg;

--
-- TOC entry 208 (class 1259 OID 29685)
-- Name: transactions_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE transactions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE transactions_id_seq OWNER TO ppg;

--
-- TOC entry 2416 (class 0 OID 0)
-- Dependencies: 208
-- Name: transactions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE transactions_id_seq OWNED BY transactions.id;


--
-- TOC entry 209 (class 1259 OID 29687)
-- Name: user_address; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE user_address (
    id bigint NOT NULL,
    bldg_number character varying(15),
    street character varying(50),
    room_number character varying(15)
);


ALTER TABLE user_address OWNER TO ppg;

--
-- TOC entry 210 (class 1259 OID 29690)
-- Name: user_address_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE user_address_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE user_address_id_seq OWNER TO ppg;

--
-- TOC entry 2417 (class 0 OID 0)
-- Dependencies: 210
-- Name: user_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE user_address_id_seq OWNED BY user_address.id;


--
-- TOC entry 211 (class 1259 OID 29692)
-- Name: user_contacts; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE user_contacts (
    id bigint NOT NULL,
    email character varying(50),
    tel_number character varying(50),
    mobile_number character varying(50)
);


ALTER TABLE user_contacts OWNER TO ppg;

--
-- TOC entry 212 (class 1259 OID 29695)
-- Name: user_contacts_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE user_contacts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE user_contacts_id_seq OWNER TO ppg;

--
-- TOC entry 2418 (class 0 OID 0)
-- Dependencies: 212
-- Name: user_contacts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE user_contacts_id_seq OWNED BY user_contacts.id;


--
-- TOC entry 213 (class 1259 OID 29697)
-- Name: users; Type: TABLE; Schema: public; Owner: ppg
--

CREATE TABLE users (
    id bigint NOT NULL,
    fname character varying(50),
    mname character varying(50),
    lname character varying(50),
    user_password character varying(50),
    earned_points double precision DEFAULT 0,
    contact_id integer,
    address_id integer,
    role_id integer,
    is_active boolean DEFAULT true
);


ALTER TABLE users OWNER TO ppg;

--
-- TOC entry 214 (class 1259 OID 29702)
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: ppg
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO ppg;

--
-- TOC entry 2419 (class 0 OID 0)
-- Dependencies: 214
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ppg
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- TOC entry 2165 (class 2604 OID 29704)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY categories ALTER COLUMN id SET DEFAULT nextval('categories_id_seq'::regclass);


--
-- TOC entry 2166 (class 2604 OID 29705)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY category_foods ALTER COLUMN id SET DEFAULT nextval('category_foods_id_seq'::regclass);


--
-- TOC entry 2167 (class 2604 OID 29706)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY food_images ALTER COLUMN id SET DEFAULT nextval('food_images_id_seq'::regclass);


--
-- TOC entry 2170 (class 2604 OID 29707)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY foods ALTER COLUMN id SET DEFAULT nextval('foods_id_seq'::regclass);


--
-- TOC entry 2171 (class 2604 OID 29708)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY order_foods ALTER COLUMN id SET DEFAULT nextval('order_foods_id_seq'::regclass);


--
-- TOC entry 2173 (class 2604 OID 29709)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY orders ALTER COLUMN id SET DEFAULT nextval('orders_id_seq'::regclass);


--
-- TOC entry 2175 (class 2604 OID 29710)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurant_branch ALTER COLUMN id SET DEFAULT nextval('restaurant_branch_id_seq'::regclass);


--
-- TOC entry 2176 (class 2604 OID 29711)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurants ALTER COLUMN id SET DEFAULT nextval('restaurants_id_seq'::regclass);


--
-- TOC entry 2177 (class 2604 OID 29712)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY resto_branch_address ALTER COLUMN id SET DEFAULT nextval('resto_branch_address_id_seq'::regclass);


--
-- TOC entry 2178 (class 2604 OID 29713)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY resto_branch_contacts ALTER COLUMN id SET DEFAULT nextval('resto_branch_contacts_id_seq'::regclass);


--
-- TOC entry 2179 (class 2604 OID 29714)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY resto_images ALTER COLUMN id SET DEFAULT nextval('resto_images_id_seq'::regclass);


--
-- TOC entry 2180 (class 2604 OID 29715)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY roles ALTER COLUMN id SET DEFAULT nextval('roles_id_seq'::regclass);


--
-- TOC entry 2181 (class 2604 OID 29716)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY transaction_address ALTER COLUMN id SET DEFAULT nextval('transaction_address_id_seq'::regclass);


--
-- TOC entry 2184 (class 2604 OID 29717)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY transactions ALTER COLUMN id SET DEFAULT nextval('transactions_id_seq'::regclass);


--
-- TOC entry 2185 (class 2604 OID 29718)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY user_address ALTER COLUMN id SET DEFAULT nextval('user_address_id_seq'::regclass);


--
-- TOC entry 2186 (class 2604 OID 29719)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY user_contacts ALTER COLUMN id SET DEFAULT nextval('user_contacts_id_seq'::regclass);


--
-- TOC entry 2189 (class 2604 OID 29720)
-- Name: id; Type: DEFAULT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- TOC entry 2361 (class 0 OID 29607)
-- Dependencies: 181
-- Data for Name: categories; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY categories (id, category_name, is_active) FROM stdin;
\.


--
-- TOC entry 2420 (class 0 OID 0)
-- Dependencies: 182
-- Name: categories_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('categories_id_seq', 1, false);


--
-- TOC entry 2363 (class 0 OID 29613)
-- Dependencies: 183
-- Data for Name: category_foods; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY category_foods (id, foods_id, category_id) FROM stdin;
\.


--
-- TOC entry 2421 (class 0 OID 0)
-- Dependencies: 184
-- Name: category_foods_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('category_foods_id_seq', 1, false);


--
-- TOC entry 2365 (class 0 OID 29618)
-- Dependencies: 185
-- Data for Name: food_images; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY food_images (id, url) FROM stdin;
1	madcow.jpg
5	carnosa.jpg
6	carnosa.jpg
7	carnosa.jpg
8	carnosa.jpg
\.


--
-- TOC entry 2422 (class 0 OID 0)
-- Dependencies: 186
-- Name: food_images_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('food_images_id_seq', 1, false);


--
-- TOC entry 2367 (class 0 OID 29623)
-- Dependencies: 187
-- Data for Name: foods; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY foods (id, food_name, description, unit_cost, resto_id, image_id, is_available, is_active) FROM stdin;
1	Madcow	The original hot and spicy pizza in the world.	300	2	1	t	f
4	Tacorella	A taste of famous Mexican taco delicacy in a pizza.	299	2	\N	t	f
5	Carnosa	Cheezy Meat – rich tomato sauce topped with a delightful blend of Mozzarella, Cheddar and melted cheese.	299	2	5	t	t
6	Bacon and Cheese	This is the breath-taking marriage of bacon & cheese on a bed of tomato sauce and fresh dough. 	299	2	6	t	t
7	Burro (Butter) 	Cheezy Meat – rich tomato sauce topped with a delightful blend of Mozzarella, Cheddar and melted cheese.	299	2	7	t	t
8	Burgerella	Imagine a creamy, buttery pizza laden with fresh garlic bits and choice herbs.	299	2	8	t	t
\.


--
-- TOC entry 2423 (class 0 OID 0)
-- Dependencies: 188
-- Name: foods_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('foods_id_seq', 8, true);


--
-- TOC entry 2369 (class 0 OID 29633)
-- Dependencies: 189
-- Data for Name: order_foods; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY order_foods (id, quantity, food_id, resto_branch_id) FROM stdin;
3	1	1	2
4	1	1	2
5	1	1	2
7	\N	\N	\N
8	\N	\N	\N
9	1	4	2
10	1	1	2
6	1	\N	2
\.


--
-- TOC entry 2424 (class 0 OID 0)
-- Dependencies: 190
-- Name: order_foods_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('order_foods_id_seq', 1, false);


--
-- TOC entry 2371 (class 0 OID 29638)
-- Dependencies: 191
-- Data for Name: orders; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY orders (id, user_id, order_food_id, is_done) FROM stdin;
3	4	3	f
4	4	4	f
5	4	5	f
6	4	6	f
7	4	7	f
8	4	8	f
9	4	9	f
10	4	10	f
\.


--
-- TOC entry 2425 (class 0 OID 0)
-- Dependencies: 192
-- Name: orders_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('orders_id_seq', 10, true);


--
-- TOC entry 2373 (class 0 OID 29644)
-- Dependencies: 193
-- Data for Name: restaurant_branch; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY restaurant_branch (id, delivery_fee, contact_id, resto_id, address_id, is_active) FROM stdin;
2	2	2	2	2	t
7	3	7	7	7	t
1	5	1	1	1	t
\.


--
-- TOC entry 2426 (class 0 OID 0)
-- Dependencies: 194
-- Name: restaurant_branch_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('restaurant_branch_id_seq', 8, true);


--
-- TOC entry 2375 (class 0 OID 29650)
-- Dependencies: 195
-- Data for Name: restaurants; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY restaurants (id, resto_name, min_order, image_id) FROM stdin;
2	Pizzarella	5	2
7	test	3	7
1	Flamoo Flame Grilled Burgers	20	1
\.


--
-- TOC entry 2427 (class 0 OID 0)
-- Dependencies: 196
-- Name: restaurants_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('restaurants_id_seq', 8, true);


--
-- TOC entry 2377 (class 0 OID 29655)
-- Dependencies: 197
-- Data for Name: resto_branch_address; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY resto_branch_address (id, bldg_number, street, room_number) FROM stdin;
2		San Miguel	
4		Pedro Permites Rd	
5		Pedro Permites Rd	
7	0	street	0
1		Quezon Avenue Extension	
\.


--
-- TOC entry 2428 (class 0 OID 0)
-- Dependencies: 198
-- Name: resto_branch_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('resto_branch_address_id_seq', 1, false);


--
-- TOC entry 2379 (class 0 OID 29660)
-- Dependencies: 199
-- Data for Name: resto_branch_contacts; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY resto_branch_contacts (id, email, tel_number, mobile_number) FROM stdin;
2	pizzarella@gmail.com	283-29-34	09123456789
4	frapella@gmail.com	283-29-34	09123456789
5	frapella@gmail.com	283-29-34	09123456789
7	m@gmail.com	09	90
1	flamoo@gmail.com	283-29-34	09123456789
\.


--
-- TOC entry 2429 (class 0 OID 0)
-- Dependencies: 200
-- Name: resto_branch_contacts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('resto_branch_contacts_id_seq', 1, false);


--
-- TOC entry 2381 (class 0 OID 29665)
-- Dependencies: 201
-- Data for Name: resto_images; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY resto_images (id, url) FROM stdin;
1	flamoo.jpg
2	pizzarella.jpg
4	frapella.jpg
5	frapella.jpg
7	jkhk
\.


--
-- TOC entry 2430 (class 0 OID 0)
-- Dependencies: 202
-- Name: resto_images_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('resto_images_id_seq', 1, false);


--
-- TOC entry 2383 (class 0 OID 29670)
-- Dependencies: 203
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY roles (id, rolename) FROM stdin;
1	System Admin
2	Business Manager
3	Customer
\.


--
-- TOC entry 2431 (class 0 OID 0)
-- Dependencies: 204
-- Name: roles_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('roles_id_seq', 3, true);


--
-- TOC entry 2385 (class 0 OID 29675)
-- Dependencies: 205
-- Data for Name: transaction_address; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY transaction_address (id, bldg_number, street, room_number) FROM stdin;
1	2	test	8
2	2	test	8
3	2	test	8
4	2	test	8
\.


--
-- TOC entry 2432 (class 0 OID 0)
-- Dependencies: 206
-- Name: transaction_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('transaction_address_id_seq', 1, false);


--
-- TOC entry 2387 (class 0 OID 29680)
-- Dependencies: 207
-- Data for Name: transactions; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY transactions (id, transaction_number, transaction_date, order_id, total, is_paid, address_id) FROM stdin;
1	1	2016-12-17 08:48:58.122318	3	4	f	1
2	1	2016-12-17 08:50:15.257546	3	4	f	2
3	1	2016-12-17 08:50:27.786065	3	4	f	3
4	1	2016-12-20 02:08:53.351674	3	4	f	4
\.


--
-- TOC entry 2433 (class 0 OID 0)
-- Dependencies: 208
-- Name: transactions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('transactions_id_seq', 4, true);


--
-- TOC entry 2389 (class 0 OID 29687)
-- Dependencies: 209
-- Data for Name: user_address; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY user_address (id, bldg_number, street, room_number) FROM stdin;
3	12	Street Shop	4B
4	12	Street Shop	4B
5	1	testing	1
6	1	testing	1
7	12	Street Shop	4B
\.


--
-- TOC entry 2434 (class 0 OID 0)
-- Dependencies: 210
-- Name: user_address_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('user_address_id_seq', 1, false);


--
-- TOC entry 2391 (class 0 OID 29692)
-- Dependencies: 211
-- Data for Name: user_contacts; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY user_contacts (id, email, tel_number, mobile_number) FROM stdin;
4	james@gmail.com	225-1234	09090090909
3	kristel@gmail.com	225-1234	09090090909
5	fname@gmail.com	225-1234	09090090909
6	bfname@gmail.com	225-1234	09090090909
7	minho@gmail.com	225-1234	09090090909
\.


--
-- TOC entry 2435 (class 0 OID 0)
-- Dependencies: 212
-- Name: user_contacts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('user_contacts_id_seq', 1, false);


--
-- TOC entry 2393 (class 0 OID 29697)
-- Dependencies: 213
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: ppg
--

COPY users (id, fname, mname, lname, user_password, earned_points, contact_id, address_id, role_id, is_active) FROM stdin;
3	Kristel	Ahlaine	Pabillaran	asdasd	100	3	3	1	t
4	James	M	Reid	21232f297a57a5a743894a0e4a801fc3	0	4	4	1	t
5	cfname	cmname	clname	21232f297a57a5a743894a0e4a801fc3	0	5	5	3	t
6	bfname	bmname	blname	21232f297a57a5a743894a0e4a801fc3	0	6	6	2	t
7	Min	Ho	Lee	21232f297a57a5a743894a0e4a801fc3	0	7	7	1	t
\.


--
-- TOC entry 2436 (class 0 OID 0)
-- Dependencies: 214
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ppg
--

SELECT pg_catalog.setval('users_id_seq', 7, true);


--
-- TOC entry 2191 (class 2606 OID 29722)
-- Name: categories_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY categories
    ADD CONSTRAINT categories_pkey PRIMARY KEY (id);


--
-- TOC entry 2193 (class 2606 OID 29724)
-- Name: category_foods_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY category_foods
    ADD CONSTRAINT category_foods_pkey PRIMARY KEY (id);


--
-- TOC entry 2195 (class 2606 OID 29726)
-- Name: food_images_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY food_images
    ADD CONSTRAINT food_images_pkey PRIMARY KEY (id);


--
-- TOC entry 2197 (class 2606 OID 29728)
-- Name: foods_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY foods
    ADD CONSTRAINT foods_pkey PRIMARY KEY (id);


--
-- TOC entry 2199 (class 2606 OID 29730)
-- Name: order_foods_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY order_foods
    ADD CONSTRAINT order_foods_pkey PRIMARY KEY (id);


--
-- TOC entry 2201 (class 2606 OID 29732)
-- Name: orders_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);


--
-- TOC entry 2203 (class 2606 OID 29734)
-- Name: restaurant_branch_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurant_branch
    ADD CONSTRAINT restaurant_branch_pkey PRIMARY KEY (id);


--
-- TOC entry 2205 (class 2606 OID 29736)
-- Name: restaurants_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurants
    ADD CONSTRAINT restaurants_pkey PRIMARY KEY (id);


--
-- TOC entry 2207 (class 2606 OID 29738)
-- Name: resto_branch_address_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY resto_branch_address
    ADD CONSTRAINT resto_branch_address_pkey PRIMARY KEY (id);


--
-- TOC entry 2209 (class 2606 OID 29740)
-- Name: resto_branch_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY resto_branch_contacts
    ADD CONSTRAINT resto_branch_contacts_pkey PRIMARY KEY (id);


--
-- TOC entry 2211 (class 2606 OID 29742)
-- Name: resto_images_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY resto_images
    ADD CONSTRAINT resto_images_pkey PRIMARY KEY (id);


--
-- TOC entry 2213 (class 2606 OID 29744)
-- Name: roles_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);


--
-- TOC entry 2215 (class 2606 OID 29746)
-- Name: transaction_address_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY transaction_address
    ADD CONSTRAINT transaction_address_pkey PRIMARY KEY (id);


--
-- TOC entry 2217 (class 2606 OID 29748)
-- Name: transactions_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_pkey PRIMARY KEY (id);


--
-- TOC entry 2219 (class 2606 OID 29750)
-- Name: user_address_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY user_address
    ADD CONSTRAINT user_address_pkey PRIMARY KEY (id);


--
-- TOC entry 2221 (class 2606 OID 29752)
-- Name: user_contacts_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY user_contacts
    ADD CONSTRAINT user_contacts_pkey PRIMARY KEY (id);


--
-- TOC entry 2223 (class 2606 OID 29754)
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- TOC entry 2241 (class 2620 OID 29755)
-- Name: create_food_ins; Type: TRIGGER; Schema: public; Owner: ppg
--

CREATE TRIGGER create_food_ins AFTER INSERT ON foods FOR EACH ROW EXECUTE PROCEDURE create_food();


--
-- TOC entry 2242 (class 2620 OID 29756)
-- Name: create_order_foods_ins; Type: TRIGGER; Schema: public; Owner: ppg
--

CREATE TRIGGER create_order_foods_ins AFTER INSERT ON orders FOR EACH ROW EXECUTE PROCEDURE create_order_foods();


--
-- TOC entry 2243 (class 2620 OID 29757)
-- Name: create_restaurant_branch_ins; Type: TRIGGER; Schema: public; Owner: ppg
--

CREATE TRIGGER create_restaurant_branch_ins AFTER INSERT ON restaurant_branch FOR EACH ROW EXECUTE PROCEDURE create_restaurant_branch();


--
-- TOC entry 2244 (class 2620 OID 29758)
-- Name: create_restaurant_ins; Type: TRIGGER; Schema: public; Owner: ppg
--

CREATE TRIGGER create_restaurant_ins AFTER INSERT ON restaurants FOR EACH ROW EXECUTE PROCEDURE create_restaurant();


--
-- TOC entry 2245 (class 2620 OID 29759)
-- Name: create_transaction_ins; Type: TRIGGER; Schema: public; Owner: ppg
--

CREATE TRIGGER create_transaction_ins AFTER INSERT ON transactions FOR EACH ROW EXECUTE PROCEDURE create_transaction();


--
-- TOC entry 2246 (class 2620 OID 29760)
-- Name: create_user_trigger; Type: TRIGGER; Schema: public; Owner: ppg
--

CREATE TRIGGER create_user_trigger AFTER INSERT ON users FOR EACH ROW EXECUTE PROCEDURE create_contact_address();


--
-- TOC entry 2224 (class 2606 OID 29761)
-- Name: category_foods_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY category_foods
    ADD CONSTRAINT category_foods_category_id_fkey FOREIGN KEY (category_id) REFERENCES categories(id);


--
-- TOC entry 2225 (class 2606 OID 29766)
-- Name: category_foods_foods_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY category_foods
    ADD CONSTRAINT category_foods_foods_id_fkey FOREIGN KEY (foods_id) REFERENCES foods(id);


--
-- TOC entry 2226 (class 2606 OID 29771)
-- Name: foods_image_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY foods
    ADD CONSTRAINT foods_image_id_fkey FOREIGN KEY (image_id) REFERENCES food_images(id);


--
-- TOC entry 2227 (class 2606 OID 29776)
-- Name: foods_resto_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY foods
    ADD CONSTRAINT foods_resto_id_fkey FOREIGN KEY (resto_id) REFERENCES restaurants(id);


--
-- TOC entry 2228 (class 2606 OID 29781)
-- Name: order_foods_food_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY order_foods
    ADD CONSTRAINT order_foods_food_id_fkey FOREIGN KEY (food_id) REFERENCES foods(id);


--
-- TOC entry 2229 (class 2606 OID 29786)
-- Name: order_foods_resto_branch_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY order_foods
    ADD CONSTRAINT order_foods_resto_branch_id_fkey FOREIGN KEY (resto_branch_id) REFERENCES restaurant_branch(id);


--
-- TOC entry 2230 (class 2606 OID 29791)
-- Name: orders_order_food_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY orders
    ADD CONSTRAINT orders_order_food_id_fkey FOREIGN KEY (order_food_id) REFERENCES order_foods(id);


--
-- TOC entry 2231 (class 2606 OID 29796)
-- Name: orders_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY orders
    ADD CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id);


--
-- TOC entry 2232 (class 2606 OID 29801)
-- Name: restaurant_branch_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurant_branch
    ADD CONSTRAINT restaurant_branch_address_id_fkey FOREIGN KEY (address_id) REFERENCES resto_branch_address(id);


--
-- TOC entry 2233 (class 2606 OID 29806)
-- Name: restaurant_branch_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurant_branch
    ADD CONSTRAINT restaurant_branch_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES resto_branch_contacts(id);


--
-- TOC entry 2234 (class 2606 OID 29811)
-- Name: restaurant_branch_resto_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurant_branch
    ADD CONSTRAINT restaurant_branch_resto_id_fkey FOREIGN KEY (resto_id) REFERENCES restaurants(id);


--
-- TOC entry 2235 (class 2606 OID 29816)
-- Name: restaurants_image_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY restaurants
    ADD CONSTRAINT restaurants_image_id_fkey FOREIGN KEY (image_id) REFERENCES resto_images(id);


--
-- TOC entry 2236 (class 2606 OID 29821)
-- Name: transactions_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_address_id_fkey FOREIGN KEY (address_id) REFERENCES transaction_address(id);


--
-- TOC entry 2237 (class 2606 OID 29826)
-- Name: transactions_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY transactions
    ADD CONSTRAINT transactions_order_id_fkey FOREIGN KEY (order_id) REFERENCES orders(id);


--
-- TOC entry 2238 (class 2606 OID 29831)
-- Name: users_address_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_address_id_fkey FOREIGN KEY (address_id) REFERENCES user_address(id);


--
-- TOC entry 2239 (class 2606 OID 29836)
-- Name: users_contact_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES user_contacts(id);


--
-- TOC entry 2240 (class 2606 OID 29841)
-- Name: users_role_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: ppg
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id) REFERENCES roles(id);


--
-- TOC entry 2401 (class 0 OID 0)
-- Dependencies: 7
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


-- Completed on 2016-12-23 05:58:03 PHT

--
-- PostgreSQL database dump complete
--

